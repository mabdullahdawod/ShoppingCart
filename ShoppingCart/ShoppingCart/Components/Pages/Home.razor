@page "/"
@using ShoppingCart.Modal
@using ShoppingCart.SharedService
@using ShoppingCart.Services
@inject ProductShareService sharedservice
@inject ProductServices productservice
@inject NavigationManager navigate

<Navbar/>

@* <div class="text-center fs-1">Products</div> *@

@if (isLoading)
{
    <div class="text-center">Loading...</div>
}
else if (products == null || !products.Any())
{
    <div class="text-center">No products available</div>
}
else
{
    <div class="container-fluid" style="display: flex; flex-wrap: wrap; flex-direction: row;">
        @foreach (var item in products)
        {
            <ProductCard product="@item" />
        }
    </div>
}

@code {
    private List<Product> products;
    private bool isLoading = true;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            products = await productservice.GetProductsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching products: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

 
}
